# On active le mode "un seul binaire qui fait tout"
singleBinary:
  enabled: true
  # On lui attache le volume persistant qu'on a défini plus bas
  persistence:
    enabled: true
    size: 20Gi
    # storageClassName: "ton-storage-class" # À décommenter si besoin

# On désactive EXPLICITEMENT les composants du mode distribué
# C'est la partie qui corrige ton erreur !
read:
  enabled: false
write:
  enabled: false
backend:
  enabled: false

# Ta configuration de stockage en filesystem reste la même
loki:
  storage:
    type: 'filesystem'
    filesystem:
      directory: /data/loki
monitoring:
  dashboards:
    enabled: false
  rules:
    enabled: false
  alerts:
    enabled: false
  serviceMonitor:
    enabled: false
  selfMonitoring:
    enabled: false
# Configuration de l'Ingress pour exposer Loki sur une URL
ingress:
  enabled: true
  # Le nom de ta classe d'ingress (ex: nginx, traefik...)
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  # Le nom de domaine pour accéder à Loki
  hosts:
    - host: loki.yukino.li # <-- MODIFIE CECI avec ton nom de domaine
      paths:
        - path: /
          pathType: Prefix # On envoie tout le trafic vers Loki
  tls:
    enabled: true
    secretName: loki-tls
    hosts:
      - loki.yukino.li

  # Annotations, par exemple pour cert-manager qui gère les certificats HTTPS
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Remplace par ton ClusterIssuer

  # Configuration du TLS pour avoir du HTTPS
  tls:
    - secretName: loki-tls # Nom du secret qui stockera le certificat
      hosts:
        - loki.yukino.li # <-- MODIFIE CECI avec ton nom de domaine


